## Allow use to configure cpu or gpu
ARG mode
ARG BASE_IMAGE=gcr.io/kubeflow-images-public/tensorflow-1.12.0-notebook-$mode:v0.4.0
FROM $BASE_IMAGE
ARG mode
ENV MODE=${mode}

USER root

## os dependencies
ADD apt.txt /apt.txt
RUN apt-get update &&\
    cat /apt.txt | xargs -l apt-get install -y &&\
    rm /apt.txt &&\
    curl -sL https://deb.nodesource.com/setup_9.x | bash &&\
    apt-get install -y nodejs &&\
    apt-get clean &&\
    pip install yq &&\
    conda update conda
    
## Environment var config
ENV CONDA_DIR /opt/conda
ENV PATH $CONDA_DIR:$PATH:/home/$NB_USER/.local/bin
RUN chown -R $NB_USER /home/$NB_USER/

## Install ffmpeg
RUN git clone https://github.com/kkroening/ffmpeg-python.git /tmp/ffmpeg-python
ENV PYTHONPATH=/tmp/ffmpeg-python

## Conda environment installation and kernal register
ENV ENVIRONMENT=/environment.yml
ADD environment-${MODE}.yml $ENVIRONMENT
RUN conda create --name $(cat $ENVIRONMENT | yq -r .name ) --clone base && \
    conda env update -f /environment.yml

## Create special conda environment kernel
RUN bash -c "source activate $(cat $ENVIRONMENT | yq -r .name ) &&\
             python3 -m ipykernel install --user --name $(cat $ENVIRONMENT | yq -r .name ) --display-name \"$(cat $ENVIRONMENT | yq -r .name )\""

## Install extensions
ADD jupyter-extensions.txt /jupyter-extensions.txt
RUN bash -c "source activate $(cat $ENVIRONMENT | yq -r .name ) &&\
	     cat /jupyter-extensions.txt | xargs -l jupyter labextension install &&\
             rm /jupyter-extensions.txt"

## Activate environment then run notebook
ENV DISABLE_TFMA_EXTENSION=1
RUN echo "source activate $(cat $ENVIRONMENT | yq -r .name )" > /home/${NB_USER}/.bashrc

## Add conda environment as kernel
RUN bash -c "source activate $(cat $ENVIRONMENT | yq -r .name ) &&\
	     python -m ipykernel install --user \
                                         --name $(cat $ENVIRONMENT | yq -r .name ) \
                                         --display-name $(cat $ENVIRONMENT | yq -r .name )"

## Permissions
RUN chown ${NB_USER} -R /home/${NB_USER}/

## Final user setup
USER ${NB_USER}
CMD ["bash", "-ic", "start-notebook.sh"]
